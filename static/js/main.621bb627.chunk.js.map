{"version":3,"sources":["actions/orderActions.js","actions/types.js","components/Orders/index.js","components/Profile/index.js","components/Profile/Profile.js","components/OrderDetails/index.js","containers/Header/index.js","containers/Nav/index.js","reducers/orderReducer.js","reducers/index.js","store/store.js","containers/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["fetchOrders","dispatch","fetch","then","res","json","orders","type","payload","Orders","this","props","ordersList","map","order","react_default","a","createElement","Table","Row","key","id","Cell","Image","size","src","product","picture","style","marginRight","react_router_dom","to","concat","name","price","orderStatus","index_es","value","orderDate","day","month","year","Label","as","color","ribbon","icon","Divider","fitted","celled","collapsing","striped","unstackable","Header","HeaderCell","Body","Component","connect","state","CardExampleExtraContent","Card","raised","Content","floated","cardData","fullName","Meta","company","Description","about","extra","Icon","link","email","phone","address","latitude","longitude","registered","OrderDetails","fetchProfile","e","setState","Object","defineProperty","target","nameObj","profile","values","join","Profile","Loader","active","inline","customHistory","createBrowserHistory","orderId","idProduct","itemGroupMarkUp","filter","o","pdata","Item","className","description","Extra","Group","divided","Button","onClick","goBack","HeaderMenu","Menu","fixed","inverted","Container","header","PreProcessProductDetails","match","components_OrderDetails","params","FixedMenuLayout","text","marginTop","react_router","exact","path","component","initialState","combineReducers","arguments","length","undefined","action","objectSpread","console","log","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Footer","Segment","vertical","margin","padding","textAlign","List","horizontal","href","App","es","Nav","containers_Footer","Boolean","window","location","hostname","ReactDOM","render","locale","timeZone","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.621bb627.chunk.js","sourcesContent":["import { FETCH_ORDERS, FETCH_PROFILE } from \"./types\";\n\nexport const fetchOrders = () => dispatch => {\n  fetch(\" https://api.myjson.com/bins/1f2eri\")\n    .then(res => res.json())\n    .then(orders => {\n      dispatch({\n        type: FETCH_ORDERS,\n        payload: orders,\n        orders: orders.orders\n      });\n    });\n};\n\nexport const fetchProfile = () => dispatch => {\n  fetch(\" https://api.myjson.com/bins/1f2eri\")\n    .then(res => res.json())\n    .then(orders => {\n      delete orders[\"orders\"];\n      dispatch({\n        type: FETCH_PROFILE,\n        payload: orders\n      });\n    });\n};\n","export const FETCH_ORDERS ='FETCH_ORDERS';\nexport const FETCH_PROFILE ='FETCH_PROFILE';\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"../../actions/orderActions\";\nimport { FormattedDate } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { Image, Table, Label, Divider } from \"semantic-ui-react\";\n\nclass Orders extends Component {\n  componentWillMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    const ordersList = this.props.orders.map(order => (\n      <Table.Row key={order.id}>\n        <Table.Cell>\n          <Image\n            size=\"mini\"\n            src={order.product.picture}\n            style={{ marginRight: \"1.5em\" }}\n          />\n        </Table.Cell>\n        <Table.Cell>\n          <Link to={`/e-commenceland/orders/${order.id}`}>{order.product.name}</Link>\n        </Table.Cell>\n        <Table.Cell> {order.price}</Table.Cell>\n        <Table.Cell>{order.product.orderStatus}</Table.Cell>\n        <Table.Cell>\n          <FormattedDate\n            value={order.product.orderDate}\n            day=\"numeric\"\n            month=\"long\"\n            year=\"numeric\"\n          />\n        </Table.Cell>\n      </Table.Row>\n    ));\n    return (\n      <div>\n        <Label as=\"a\" color=\"red\" ribbon icon=\"closed captioning\">\n          Your Orders\n        </Label>\n        <span>\n          <b> All Orders</b>\n        </span>\n        <Divider fitted/>\n\n        <Table\n          celled\n          collapsing\n          color=\"green\"\n          striped\n          size=\"large\"\n          unstackable\n          key=\"green\"\n        >\n          <Table.Header color=\"brown\">\n            <Table.Row>\n              <Table.HeaderCell>Product Image</Table.HeaderCell>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>Price</Table.HeaderCell>\n              <Table.HeaderCell>Status</Table.HeaderCell>\n              <Table.HeaderCell>Ordered Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>{ordersList}</Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}\n\nOrders.propTypes = {\n  fetchOrders: PropTypes.func.isRequired,\n  // posts: PropTypes.array.isRequired,\n  // posts: PropTypes.object,\n  orders: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  orders: state.orders.orders\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchOrders }\n)(Orders);\n","import React from \"react\";\nimport { Image, Card, Icon } from \"semantic-ui-react\";\nimport { FormattedDate } from \"react-intl\";\n\nconst CardExampleExtraContent = props => (\n  <Card color=\"teal\" raised>\n    <Card.Content>\n      <Image floated=\"right\" size=\"mini\" src={props.cardData.picture} />\n      <Card.Header>{props.fullName}</Card.Header>\n      <Card.Meta>{props.cardData.company}</Card.Meta>\n      <Card.Description>{props.cardData.about}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <Card.Header>Info:</Card.Header>\n      <Card.Meta>\n        <strong>\n          <Icon link name=\"mail\" /> :{\" \"}\n        </strong>\n        {props.cardData.email}\n      </Card.Meta>\n      <Card.Meta>\n        <strong>\n          <Icon link name=\"phone\" /> :{\" \"}\n        </strong>\n        {props.cardData.phone}\n      </Card.Meta>\n      <Card.Meta>\n        <strong>\n          <Icon link name=\"address book\" /> :{\" \"}\n        </strong>\n        {props.cardData.address}\n      </Card.Meta>\n    </Card.Content>\n    <Card.Content extra>\n      <Card.Header>GPS coordinates:</Card.Header>\n      <Card.Meta>\n        <strong>Lat:</strong>\n        {props.cardData.latitude}\n      </Card.Meta>\n      <Card.Meta>\n        <strong>Long:</strong>\n        {props.cardData.longitude}\n      </Card.Meta>\n    </Card.Content>\n    <Card.Content extra>\n      <Card.Description>\n        {\" \"}\n        <strong>Registered On: </strong>\n        <FormattedDate\n          value={props.cardData.registered}\n          day=\"numeric\"\n          month=\"long\"\n          year=\"numeric\"\n        />\n      </Card.Description>\n    </Card.Content>\n  </Card>\n);\n\nexport default CardExampleExtraContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ProfileData from \"./index\";\nimport { fetchProfile } from \"../../actions/orderActions\";\nimport { Loader } from \"semantic-ui-react\";\n\nclass OrderDetails extends Component {\n  componentWillMount() {\n    this.props.fetchProfile();\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const nameObj = this.props.profile.name;\n    const fullName = nameObj ? Object.values(nameObj).join(\" \") : \"\";\n    if (this.props.profile.registered) {\n      return <ProfileData cardData={this.props.profile} fullName={fullName} />;\n    } else {\n      return <Loader active inline />;\n    }\n  }\n}\n\nOrderDetails.propTypes = {\n  fetchProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.orders.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProfile }\n)(OrderDetails);\n","import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"../../actions/orderActions\";\nimport { Item, Label, Icon, Button, Divider } from \"semantic-ui-react\";\nimport { FormattedDate } from \"react-intl\";\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory();\n\nclass OrderDetails extends Component {\n  componentWillMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    const orderId = this.props.idProduct;\n    const productDetails = this.props.orders.filter(o => o.id === orderId);\n    const itemGroupMarkUp = productDetails.map(pdata => (\n      <Item key={`pdt_{orderId}`}>\n        <Item.Image src={pdata.product.picture} />\n        <Item.Content>\n          <Item.Header as=\"a\">{pdata.product.name}</Item.Header>\n          <Item.Meta>\n            <span className=\"cinema\">{pdata.price}</span>\n          </Item.Meta>\n          <Item.Description>{pdata.product.description}</Item.Description>\n          <Item.Extra>\n            <Label color=\"blue\">{pdata.product.orderStatus}</Label>\n            <Label color=\"yellow\">\n              <Icon name=\"calendar\" />\n              <FormattedDate\n                value={pdata.product.orderDate}\n                day=\"numeric\"\n                month=\"long\"\n                year=\"numeric\"\n              />{\" \"}\n            </Label>\n          </Item.Extra>\n        </Item.Content>\n      </Item>\n    ));\n\n    return (\n      <div>\n        <Item.Group divided>{itemGroupMarkUp}</Item.Group>\n        <Divider />\n        <Button color=\"brown\" onClick={customHistory.goBack}>\n          Go Back\n        </Button>\n      </div>\n    );\n  }\n}\n\nOrderDetails.propTypes = {\n  // createPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  orders: state.orders.orders\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchOrders }\n)(OrderDetails);\n","import React from \"react\";\nimport { Container, Menu, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst HeaderMenu = () => (\n  <Menu fixed=\"top\" inverted color=\"violet\">\n    <Container>\n      <Menu.Item header>\n        {/* <Image size=\"mini\" src={logo} style={{ marginRight: \"1.5em\" }} /> */}\n        <Icon name=\"bullhorn\" />\n        <Link to=\"/e-commenceland/\" >e-Commerce Land</Link>\n      </Menu.Item>\n      <Menu.Item>\n        {\" \"}\n        <Link to=\"/e-commenceland/profile\">Profile</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"/e-commenceland/orders\">Orders</Link>\n      </Menu.Item>\n    </Container>\n  </Menu>\n);\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport { Container, Divider } from \"semantic-ui-react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Label } from \"semantic-ui-react\";\nimport Orders from \"../../components/Orders/\";\nimport Profile from \"../../components/Profile/Profile\";\nimport OrderDetails from \"../../components/OrderDetails/\";\nimport HeaderMenu from \"../Header\";\n\nfunction PreProcessProductDetails(match) {\n  return (\n    <div>\n      <Label as=\"a\" color=\"red\" ribbon icon=\"closed captioning\">\n        Order Details\n      </Label>\n      <span> Your Order Summary</span>\n      <Divider fitted />\n      <OrderDetails idProduct={match.match.params.id} />\n    </div>\n  );\n}\n\nconst FixedMenuLayout = () => (\n  <Router>\n    <Container>\n      <HeaderMenu />\n      <Container text style={{ marginTop: \"7em\" }}>\n        <Route exact path=\"/e-commenceland/\" component={Profile} />\n        <Route exact path=\"/e-commenceland/profile\" component={Profile} />\n        <Route exact path=\"/e-commenceland/orders\" component={Orders} />\n        <Route path=\"/e-commenceland/orders/:id\" component={PreProcessProductDetails} />\n      </Container>\n    </Container>\n  </Router>\n);\n\nexport default FixedMenuLayout;\n","import { FETCH_ORDERS, FETCH_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile:{}, \n  orders: [] \n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ORDERS:\n      return {\n        ...state,\n        profile: \"\",\n        orders: action.payload.orders\n      };\n    case FETCH_PROFILE:\n      console.log(\"action\",action);\n      return {\n        ...state,\n        profile: action.payload\n      };      \n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postReducer from './orderReducer';\n\nexport default combineReducers({\n    orders: postReducer\n})","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport { Container, List, Segment } from \"semantic-ui-react\";\n\nconst Footer = () => (\n  <Segment\n    color=\"violet\"\n    inverted\n    vertical\n    style={{ margin: \"5em 0em 0em\", padding: \"1em 0em\" }}\n  >\n    <Container textAlign=\"center\">\n      <List horizontal inverted divided link size=\"small\">\n        <List.Item as=\"a\" href=\"#\">\n          Contact Us\n        </List.Item>\n        <List.Item as=\"a\" href=\"#\">\n          Terms and Conditions\n        </List.Item>\n        <List.Item as=\"a\" href=\"#\">\n          Privacy Policy\n        </List.Item>\n      </List>\n    </Container>\n  </Segment>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Nav from \"./containers/Nav/\";\nimport store from \"./store/store\";\nimport Footer from \"./containers/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Nav />\n        </div>\n         <Footer />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport { IntlProvider } from \"react-intl\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <IntlProvider locale=\"en\" timeZone=\"Asia/Tokyo\">\n    <App />\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}