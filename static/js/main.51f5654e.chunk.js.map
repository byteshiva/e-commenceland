{"version":3,"sources":["actions/orderActions.js","actions/types.js","constants/base/index.js","components/Orders/index.js","components/Profile/index.js","components/Profile/Profile.js","components/OrderDetails/index.js","containers/Header/index.js","containers/Home/index.js","containers/NoMatch/index.js","containers/Nav/index.js","reducers/orderReducer.js","reducers/index.js","store/store.js","containers/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["fetchOrders","dispatch","fetch","then","res","json","orders","type","payload","GB_BASE_URL","process","Orders","this","props","ordersList","map","order","react_default","a","createElement","Table","Row","key","id","Cell","Image","size","src","product","picture","style","marginRight","react_router_dom","to","concat","name","price","orderStatus","index_es","value","orderDate","day","month","year","Label","as","color","ribbon","Divider","fitted","celled","collapsing","striped","Header","HeaderCell","Body","Component","connect","state","CardExampleExtraContent","Card","raised","Content","floated","cardData","fullName","Meta","company","Description","about","extra","Icon","link","email","phone","address","latitude","longitude","registered","OrderDetails","fetchProfile","nameObj","profile","Object","values","join","Profile","Loader","active","inline","customHistory","createBrowserHistory","orderId","idProduct","itemGroupMarkUp","filter","o","pdata","Item","className","description","Extra","Group","divided","Button","onClick","goBack","HeaderMenu","Menu","fixed","inverted","Container","header","StatisticHomeFloated","Segment","Statistic","Value","Date","NoMatch","PreProcessProductDetails","match","components_OrderDetails","params","FixedMenuLayout","text","marginTop","react_router","exact","path","component","HomePage","initialState","combineReducers","arguments","length","undefined","action","objectSpread","console","log","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Footer","vertical","margin","padding","textAlign","List","horizontal","href","App","es","Nav","containers_Footer","Boolean","window","location","hostname","ReactDOM","render","locale","timeZone","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51f5654e.chunk.js","sourcesContent":["import { FETCH_ORDERS, FETCH_PROFILE } from \"./types\";\n\nexport const fetchOrders = () => dispatch => {\n  fetch(\" https://api.myjson.com/bins/1f2eri\")\n    .then(res => res.json())\n    .then(orders => {\n      dispatch({\n        type: FETCH_ORDERS,\n        payload: orders,\n        orders: orders.orders\n      });\n    });\n};\n\nexport const fetchProfile = () => dispatch => {\n  fetch(\" https://api.myjson.com/bins/1f2eri\")\n    .then(res => res.json())\n    .then(orders => {\n      delete orders[\"orders\"];\n      dispatch({\n        type: FETCH_PROFILE,\n        payload: orders\n      });\n    });\n};\n","export const FETCH_ORDERS ='FETCH_ORDERS';\nexport const FETCH_PROFILE ='FETCH_PROFILE';\n","//  @TODO - remove the comment after e2e testing\n// const GB_BASE_URL = process.env.NODE_ENV === 'production'   ? '/e-commenceland/'   : '';\n// const GB_BASE_URL = '/e-commenceland/';\nconst GB_BASE_URL = process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : \"\";\n\nexport default GB_BASE_URL;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Image, Table, Label, Divider } from \"semantic-ui-react\";\nimport { FormattedDate } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { fetchOrders } from \"../../actions/orderActions\";\nimport GB_BASE_URL from '../../constants/base/';\n\nclass Orders extends Component {\n  componentWillMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    const ordersList = this.props.orders.map(order => (\n      <Table.Row key={order.id}>\n        <Table.Cell>\n          <Image\n            size=\"mini\"\n            src={order.product.picture}\n            style={{ marginRight: \"1.5em\" }}\n          />\n        </Table.Cell>\n        <Table.Cell>\n          <Link to={`${GB_BASE_URL}/orders/${order.id}`}>{order.product.name}</Link>\n        </Table.Cell>\n        <Table.Cell> {order.price}</Table.Cell>\n        <Table.Cell>{order.product.orderStatus}</Table.Cell>\n        <Table.Cell>\n          <FormattedDate\n            value={order.product.orderDate}\n            day=\"numeric\"\n            month=\"long\"\n            year=\"numeric\"\n          />\n        </Table.Cell>\n      </Table.Row>\n    ));\n    return (\n      <div>\n        <Label as=\"a\" color=\"red\" ribbon>\n          Your Orders\n        </Label>\n        <span>\n          <b> All Orders</b>\n        </span>\n        <Divider fitted />\n\n        <Table\n          celled\n          collapsing\n          color=\"green\"\n          striped\n          size=\"large\"\n          key=\"green\"\n        >\n          <Table.Header color=\"brown\">\n            <Table.Row>\n              <Table.HeaderCell>Product Image</Table.HeaderCell>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>Price</Table.HeaderCell>\n              <Table.HeaderCell>Status</Table.HeaderCell>\n              <Table.HeaderCell>Ordered Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>{ordersList}</Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}\n\nOrders.propTypes = {\n  fetchOrders: PropTypes.func.isRequired,\n  orders: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  orders: state.orders.orders\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchOrders }\n)(Orders);\n","import React from \"react\";\nimport { Image, Card, Icon } from \"semantic-ui-react\";\nimport { FormattedDate } from \"react-intl\";\n\nconst CardExampleExtraContent = props => (\n  <Card color=\"teal\" raised>\n    <Card.Content>\n      <Image floated=\"right\" size=\"mini\" src={props.cardData.picture} />\n      <Card.Header>{props.fullName}</Card.Header>\n      <Card.Meta>{props.cardData.company}</Card.Meta>\n      <Card.Description>{props.cardData.about}</Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <Card.Header>Info:</Card.Header>\n      <Card.Meta>\n        <strong>\n          <Icon link name=\"mail\" /> :{\" \"}\n        </strong>\n        {props.cardData.email}\n      </Card.Meta>\n      <Card.Meta>\n        <strong>\n          <Icon link name=\"phone\" /> :{\" \"}\n        </strong>\n        {props.cardData.phone}\n      </Card.Meta>\n      <Card.Meta>\n        <strong>\n          <Icon link name=\"address book\" /> :{\" \"}\n        </strong>\n        {props.cardData.address}\n      </Card.Meta>\n    </Card.Content>\n    <Card.Content extra>\n      <Card.Header>GPS coordinates:</Card.Header>\n      <Card.Meta>\n        <strong>Lat:</strong>\n        {props.cardData.latitude}\n      </Card.Meta>\n      <Card.Meta>\n        <strong>Long:</strong>\n        {props.cardData.longitude}\n      </Card.Meta>\n    </Card.Content>\n    <Card.Content extra>\n      <Card.Description>\n        {\" \"}\n        <strong>Registered On: </strong>\n        <FormattedDate\n          value={props.cardData.registered}\n          day=\"numeric\"\n          month=\"long\"\n          year=\"numeric\"\n        />\n      </Card.Description>\n    </Card.Content>\n  </Card>\n);\n\nexport default CardExampleExtraContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Loader } from \"semantic-ui-react\";\nimport ProfileData from \"./index\";\nimport { fetchProfile } from \"../../actions/orderActions\";\n\nclass OrderDetails extends Component {\n  componentWillMount() {\n    this.props.fetchProfile();\n  }\n\n  render() {\n    const nameObj = this.props.profile.name;\n    const fullName = nameObj ? Object.values(nameObj).join(\" \") : \"\";\n    if (this.props.profile.registered) {\n      return <ProfileData cardData={this.props.profile} fullName={fullName} />;\n    } else {\n      return <Loader active inline />;\n    }\n  }\n}\n\nOrderDetails.propTypes = {\n  fetchProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.orders.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProfile }\n)(OrderDetails);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"../../actions/orderActions\";\nimport { Item, Label, Icon, Button, Divider } from \"semantic-ui-react\";\nimport { FormattedDate } from \"react-intl\";\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory();\n\nclass OrderDetails extends Component {\n  componentWillMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    const orderId = this.props.idProduct;\n    const productDetails = this.props.orders.filter(o => o.id === orderId);\n    const itemGroupMarkUp = productDetails.map(pdata => (\n      <Item key={`pdt_{orderId}`}>\n        <Item.Image src={pdata.product.picture} />\n        <Item.Content>\n          <Item.Header as=\"a\">{pdata.product.name}</Item.Header>\n          <Item.Meta>\n            <span className=\"cinema\">{pdata.price}</span>\n          </Item.Meta>\n          <Item.Description>{pdata.product.description}</Item.Description>\n          <Item.Extra>\n            <Label color=\"blue\">{pdata.product.orderStatus}</Label>\n            <Label color=\"yellow\">\n              <Icon name=\"calendar\" />\n              <FormattedDate\n                value={pdata.product.orderDate}\n                day=\"numeric\"\n                month=\"long\"\n                year=\"numeric\"\n              />{\" \"}\n            </Label>\n          </Item.Extra>\n        </Item.Content>\n      </Item>\n    ));\n\n    return (\n      <div>\n        <Item.Group divided>{itemGroupMarkUp}</Item.Group>\n        <Divider />\n        <Button color=\"brown\" onClick={customHistory.goBack}>\n          Go Back\n        </Button>\n      </div>\n    );\n  }\n}\n\nOrderDetails.propTypes = {\n  fetchOrders: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  orders: state.orders.orders\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchOrders }\n)(OrderDetails);\n","import React from \"react\";\nimport { Container, Menu, Icon } from \"semantic-ui-react\";\nimport { Link as RLink } from \"react-router-dom\";\nimport GB_BASE_URL from '../../constants/base/';\n\n\nconst HeaderMenu = () => (\n  <Menu fixed=\"top\" inverted color=\"violet\">\n    <Container>\n      <Menu.Item header>\n        <Icon name=\"bullhorn\" />\n        <RLink to={`${GB_BASE_URL}`} >e-Commerce Land</RLink>\n      </Menu.Item>\n      <Menu.Item>\n        {\" \"}\n        <RLink to={`${GB_BASE_URL}/profile`}>Profile</RLink>\n      </Menu.Item>\n      <Menu.Item>\n        <RLink to={`${GB_BASE_URL}/orders`}>Orders</RLink>\n      </Menu.Item>\n    </Container>\n  </Menu>\n);\n\nexport default HeaderMenu;\n","import React from 'react'\nimport { FormattedDate } from \"react-intl\";\nimport { Segment, Statistic } from 'semantic-ui-react'\n\nconst StatisticHomeFloated = () => (\n  <Segment>\n    <Statistic floated='right'>\n      <Statistic.Value><FormattedDate\n          value={Date()}\n          day=\"numeric\"\n          month=\"long\"\n          year=\"numeric\"\n        /></Statistic.Value>\n      <Statistic.Label>Welcome Home</Statistic.Label>\n    </Statistic>\n\n    <p>\n      Te eum doming eirmod, nominati pertinacia argumentum ad his. Ex eam alia facete scriptorem,\n      est autem aliquip detraxit at. Usu ocurreret referrentur at, cu epicurei appellantur vix. Cum\n      ea laoreet recteque electram, eos choro alterum definiebas in. Vim dolorum definiebas an. Mei\n      ex natum rebum iisque.\n    </p>\n\n    <p>\n      Audiam quaerendum eu sea, pro omittam definiebas ex. Te est latine definitiones. Quot wisi\n      nulla ex duo. Vis sint solet expetenda ne, his te phaedrum referrentur consectetuer. Id vix\n      fabulas oporteat, ei quo vide phaedrum, vim vivendum maiestatis in.\n    </p>\n\n    <Statistic floated='left'>\n      <Statistic.Value>2,000</Statistic.Value>\n      <Statistic.Label>Views</Statistic.Label>\n    </Statistic>\n\n    <p>\n      Eu quo homero blandit intellegebat. Incorrupte consequuntur mei id. Mei ut facer dolores\n      adolescens, no illum aperiri quo, usu odio brute at. Qui te porro electram, ea dico facete\n      utroque quo. Populo quodsi te eam, wisi everti eos ex, eum elitr altera utamur at. Quodsi\n      convenire mnesarchum eu per, quas minimum postulant per id.\n    </p>\n    <p>\n      Audiam quaerendum eu sea, pro omittam definiebas ex. Te est latine definitiones. Quot wisi\n      nulla ex duo. Vis sint solet expetenda ne, his te phaedrum referrentur consectetuer. Id vix\n      fabulas oporteat, ei quo vide phaedrum, vim vivendum maiestatis in.\n    </p>\n  </Segment>\n)\n\nexport default StatisticHomeFloated;\n","import React from 'react'\n\nconst NoMatch = () => (\n    <div>404 Page not Found</div>\n);\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Container, Divider } from \"semantic-ui-react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Label } from \"semantic-ui-react\";\nimport Orders from \"../../components/Orders/\";\nimport Profile from \"../../components/Profile/Profile\";\nimport OrderDetails from \"../../components/OrderDetails/\";\nimport HeaderMenu from \"../Header\";\nimport HomePage from '../Home';\nimport GB_BASE_URL from '../../constants/base/';\nimport NoMatch from '../NoMatch/';\n\nfunction PreProcessProductDetails(match) {\n  return (\n    <div>\n      <Label as=\"a\" color=\"red\" ribbon>\n        Order Details\n      </Label>\n      <span> Your Order Summary</span>\n      <Divider fitted />\n      <OrderDetails idProduct={match.match.params.id} />\n    </div>\n  );\n}\n/** \n  @todo - Restructure router tag - testing todo Bot\n  @body - expand and include multiple other options, - i'm testing @todo tag - ignore this comment.\n*/\n\nconst FixedMenuLayout = () => (\n  <Router>\n    <Container>\n      <HeaderMenu />\n      <Container text style={{ marginTop: \"7em\" }}>\n        <Switch>\n          <Route exact path={`${GB_BASE_URL}/profile`} component={Profile} />\n          <Route exact path={`${GB_BASE_URL}/orders`} component={Orders} />\n          <Route path={`${GB_BASE_URL}/orders/:id`} component={PreProcessProductDetails} />\n          <Route exact path={`${GB_BASE_URL}`} component={HomePage} />\n          <Route component={NoMatch}/>\n        </Switch>\n      </Container>\n    </Container>\n  </Router>\n);\n\nexport default FixedMenuLayout;\n","import { FETCH_ORDERS, FETCH_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profile:{}, \n  orders: [] \n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ORDERS:\n      return {\n        ...state,\n        profile: \"\",\n        orders: action.payload.orders\n      };\n    case FETCH_PROFILE:\n      console.log(\"action\",action);\n      console.log(process.env);\n      return {\n        ...state,\n        profile: action.payload\n      };      \n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postReducer from './orderReducer';\n\nexport default combineReducers({\n    orders: postReducer\n})","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport { Container, List, Segment } from \"semantic-ui-react\";\n\nconst Footer = () => (\n  <Segment\n    color=\"violet\"\n    inverted\n    vertical\n    style={{ margin: \"5em 0em 0em\", padding: \"1em 0em\" }}\n  >\n    <Container textAlign=\"center\">\n      <List horizontal inverted divided link size=\"small\">\n        <List.Item as=\"a\" href=\"#\">\n          Contact Us\n        </List.Item>\n        <List.Item as=\"a\" href=\"#\">\n          Terms and Conditions\n        </List.Item>\n        <List.Item as=\"a\" href=\"#\">\n          Privacy Policy\n        </List.Item>\n      </List>\n    </Container>\n  </Segment>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Nav from \"./containers/Nav/\";\nimport store from \"./store/store\";\nimport Footer from \"./containers/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Nav />\n        </div>\n         <Footer />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport { IntlProvider } from \"react-intl\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <IntlProvider locale=\"en\" timeZone=\"Asia/Tokyo\">\n    <App />\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}